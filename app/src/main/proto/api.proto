/* Copyright (c) 2018 EvilEye Authors. All Rights Reserved. */

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.yt8492.evileye.protobuf";
option java_outer_classname = "EeProto";

package evileye;

// NOTE: define empty message
//       coz protobuf-java-lite is recommended by Google Android development
//       but it not support Empty.
//  ref:  https://github.com/protocolbuffers/protobuf/issues/4314
//        https://github.com/protocolbuffers/protobuf/issues/5556
message Empty {}

message Tarekomi {
    int64 id = 1;
    string target_user_name = 2;
    string url = 3;
    string desc = 4;
}

message User {
    int64 user_id = 1;
    string user_name = 2;
    repeated Tarekomi tarekomis = 3;
}

message HealthCheckRes {
    string commit_hash = 1;
    uint64 build_time = 2;
}

message LoginRequest {
    string screen_name = 1;
    string password = 2;
}

message LoginRes {
    string token = 1;
}

message TarekomiReq {
    Tarekomi tarekomi = 1;
}

message VoteReq {
    int64 tarekomi_id = 1;
    string desc = 2;
}

message TarekomiBoardReq {
    int64 limit = 1;
    int64 offset = 2;
}

message TarekomiSummary {
    Tarekomi tarekomi = 1;
    string user_name = 2;
}

message TarekomiSummaries {
    repeated TarekomiSummary tarekomis = 1;
}

message TarekomiBoardRes {
    repeated TarekomiSummary tarekomis = 1;
}

message UserInfoReq {
    int64 user_name = 1;
}

message GetUserListReq {
    int64 limit = 1;
    int64 offset = 2;
}

message Users {
    repeated User users = 1;
}

message AddStarReq {
    int64 tarekomi_id = 1;
}

service Public {
    /*
        HealthCheck
        ヘルスチェック用
     */
    rpc HealthCheck(Empty) returns (HealthCheckRes);

    /*
        Login
        ログイン。トークンを返す
        PrivateなServiceの通信では metadataのkey`Authorization`に`Bearer {token}` をつけて通信すること
     */
    rpc Login(LoginRequest) returns (LoginRes);

}

service Private {
    /*
        Tarekomi
        Tarekomi returns some status
            Invalid      ... invalid parameter
            Internal     ... an error occured in the server
            Unauthorized ... JWT is invalid
        タレコミをする
     */
    rpc Tarekomi(TarekomiReq) returns (Empty);

    /*
        Vote

        投票は、匿名で行う
        descは、投票が完了して、ユーザ画面で表示される際には誰が投票したかは伏せて公開する
     */
    rpc Vote(VoteReq) returns (Empty);

    /*
        TarekomiBoard
        投票待ちのタレコミを表示する
     */
    rpc TarekomiBoard(TarekomiBoardReq) returns (TarekomiBoardRes);

    /*
        GetUserInfo
        ユーザの情報を返す
     */
    rpc GetUserInfo(UserInfoReq) returns (User);

    /*
        GetUserList
        ユーザ一覧を返す
     */
    rpc GetUserList(GetUserListReq) returns (Users);

    /*
        AddStar
        タレコミにStarをつける
        Approve済みのものだけ可能
     */
    rpc AddStar(AddStarReq) returns (Empty);

    /*
        GetStaredTarekomi
        自分のスターしたタレコミ一覧
        JWTからユーザ情報を取得する
     */
    rpc GetStaredTarekomi(Empty) returns (TarekomiSummaries);
}